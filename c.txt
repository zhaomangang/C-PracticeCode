class Solution {
public:
int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
	vector<vector<int >> num;
	vector<int > temp;
	int i, j;
	int n = 0;
	for (i = 0; i < obstacleGrid.size(); i++)
	{
		for (j = 0; j< obstacleGrid.at(i).size(); j++)
		{
			if (i == 0 && j == 0)
			{
				if (obstacleGrid.at(i).at(j) == 1)
					return 0;
				temp.push_back(1);
				continue;
			}

			if (obstacleGrid.at(i).at(j) == 1)
			{
				n = 0;
			}
			else {
				if (i - 1 >= 0)
				{
					n = n+num.at(i - 1).at(j);
				}
				if (j - 1 >= 0)
				{
					n = n+temp.at(j - 1);
				}
			}
			//cout << n;
			temp.push_back(n);
			n = 0;
		}
		//cout << endl;
		num.push_back(temp);
		temp.clear();
	}
	return num.at(i - 1).at(j - 1);
}
};
